version: '3.8'

services:
  # Load Balancer
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - flask1
      - flask2

  # Flask Instances
  flask1:
    build: .
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
    depends_on:
      - redis
      - db_master
      - db_replica

  flask2:
    build: .
    environment:
      - FLASK_APP=app.py
      - FLASK_ENV=production
    depends_on:
      - redis
      - db_master
      - db_replica

  # Celery Worker
  celery:
    build: .
    command: celery -A async_task.celery worker --loglevel=info
    environment:
      - FLASK_APP=app.py
    depends_on:
      - redis
      - db_master
      - db_replica

  # Redis (Broker + Cache)
  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  # PostgreSQL Master
  db_master:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: asghar
      POSTGRES_DB: bazaar_stage3
    ports:
      - "5434:5434"
    volumes:
      - pg_master_data:/var/lib/postgresql/data

  # PostgreSQL Replica
  db_replica:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: asghar
      POSTGRES_DB: bazaar_stage3
    ports:
      - "5435:5435"
    volumes:
      - pg_replica_data:/var/lib/postgresql/data
    command: >
      bash -c "
      echo 'wal_level = replica' >> /var/lib/postgresql/data/postgresql.conf &&
      echo 'max_wal_senders = 3' >> /var/lib/postgresql/data/postgresql.conf &&
      echo 'hot_standby = on' >> /var/lib/postgresql/data/postgresql.conf &&
      docker-entrypoint.sh postgres
      "

volumes:
  pg_master_data:
  pg_replica_data: